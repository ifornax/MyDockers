# syntax=docker/dockerfile:1

ARG BASE_CONTAINER=ubuntu:18.04
FROM $BASE_CONTAINER

LABEL maintainer="SARAO Data Science <nadeem@ska.ac.za>"
#ARG NB_USER="ubuntu"
#ARG NB_UID="1000"
#ARG NB_GID="1000"

USER root

# && DEBIAN_FRONTEND=noninteractive  apt-get install -y apt-utils \

ENV TZ=UTC
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN apt update
RUN apt install -y tzdata

RUN DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \
    wget \
    bzip2 \
    ca-certificates \
    sudo \
    locales \
    fonts-liberation \
    g++ \
    gcc \
    libc6-dev \
    make \
    ssh \
    git \
    pkg-config \
    libsnappy-dev \
    build-essential \
    vim \
    software-properties-common \
    python \
    python-dev \
    python-tk \
    python-setuptools \
 && rm -rf /var/lib/apt/lists/*

#RUN apt-get update && DEBIAN_FRONTEND=noninteractive  \
RUN  apt-get install -y software-properties-common
#RUN apt-get install -y python2.7 \
#    python2-setuptools \
#    python2-dev 

#RUN apt-get update -y
#RUN apt-get install -y python-tk

# intalling updated version of pip for user only
RUN wget https://bootstrap.pypa.io/pip/2.7/get-pip.py && \
    python get-pip.py pip

#RUN apt-get install python-pip

RUN python --version


#RUN pip install tkinter

Run echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && \
    locale-gen

# Configure environment
ENV SHELL=/bin/bash \
    #NB_USER=$NB_USER \
    #NB_UID=$NB_UID \
    #NB_GID=$NB_GID \
    LC_ALL=en_US.UTF-8 \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8
#ENV HOME=/home/$NB_USER

# Add a script that we will use to correct permissions after running certain commands
ADD fix-permissions /usr/local/bin/fix-permissions
RUN ls -latrh /usr/local/bin/fix-permissions
RUN chmod +x /usr/local/bin/fix-permissions

# Enable prompt color in the skeleton .bashrc before creating the default NB_USER
RUN sed -i 's/^#force_color_prompt=yes/force_color_prompt=yes/' /etc/skel/.bashrc

# Create NB_USER with name specified above with UID=1000 and in the 'users' group
# and make sure these dirs are writable by the `users` group.
RUN echo "auth requisite pam_deny.so" >> /etc/pam.d/su && \
    sed -i.bak -e 's/^%admin/#%admin/' /etc/sudoers && \
    sed -i.bak -e 's/^%sudo/#%sudo/' /etc/sudoers && \
    chmod g+w /etc/passwd
#   useradd -m -s /bin/bash -N -u $NB_UID $NB_USER && \

#install python requirements file

#COPY Isaacrequirements.txt /tmp/
#RUN pip2 install -r /tmp/requirement.txt

COPY old_code_requirement.txt /tmp/.
RUN pip2 install -r /tmp/old_code_requirement.txt

#COPY Nadeemrequirements.txt /tmp/
#RUN pip3 install -r /tmp/Nadeemrequirements.txt

# run on port 8895
EXPOSE 8895

# Configure container startup
# Add Tini to fix permissions
ENV TINI_VERSION v0.18.0
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini
RUN chmod +x /tini
ENTRYPOINT ["/tini", "--"]

#RUN fix-permissions $HOME


#USER $NB_UID
#WORKDIR $HOME


#ENV PYTHONPATH "$PYTHONPATH:/usr/lib/python3/dist-packages/:~/.local/lib/python3.6/site-packages"

RUN echo "Running papermill now...."


#
# This will run the papermill when docker is launched
#

#CMD ls /home/nadeem/DS/FB_Prophet/*py && \
#    pwd && \
#    cd

#CMD python3 $HOME/DS/FB_Prophet/papermill_test.py

# default run a notebook server
#CMD sh -c 'whoami && jupyter notebook --no-browser --ip="0.0.0.0" --port 8893 $HOME'

#WORKDIR "$HOME/GitHub/kathprfi/"
#RUN export PYTHONPATH="${PYTHONPATH}:$HOME/GitHub/kathprfi/"
CMD echo $HOME

